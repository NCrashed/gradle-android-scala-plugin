/*
 * Copyright 2014 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
apply plugin: "java"
apply plugin: "groovy"
apply plugin: "signing"
apply plugin: "idea"
apply plugin: 'maven-publish'

repositories {
    mavenCentral()
    google()
}

buildscript {
    repositories {
        mavenCentral()
        google()
    }
}

dependencies {
    implementation gradleApi()
    implementation localGroovy()
    implementation "commons-io:commons-io:2.6"
    implementation "com.google.guava:guava:23.0"
    implementation "com.android.tools.build:gradle:7.4.2"

    testImplementation "com.android.tools.build:gradle:7.4.2"
    testImplementation "org.scala-lang:scala-compiler:2.11.12"
    testImplementation "junit:junit:4.12"
}

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

def uploadToSonatypeRepository = hasProperty('sonatypeUsername')

publishing {
    publications {
        maven(MavenPublication) {
            groupId = 'jp.leafytree.gradle'
            artifactId = 'gradle-android-scala-plugin'
            version = "gradle-7.4.2"
            from components.java

            pom {
//                name "Gradle Android Scala Plugin"
                packaging "jar"
                description project.description
//                url "https://github.com/saturday06/gradle-android-scala-plugin"
            }
        }
    }
}

task groovydocJar(type: Jar, dependsOn: groovydoc) {
    from groovydoc.destinationDir
}

task sourceJar(type: Jar) {
    from sourceSets.main.allSource
}

artifacts {
    archives jar
    archives groovydocJar
    archives sourceJar
}

signing {
    if (uploadToSonatypeRepository) {
        sign configurations.archives
    }
}

//task integTest(type: jp.leafytree.gradle.AndroidScalaPluginIntegrationTestTask, dependsOn: "uploadArchives")
//task integrationTest(type: jp.leafytree.gradle.AndroidScalaPluginIntegrationTestTask, dependsOn: "uploadArchives")
task sample(type: jp.leafytree.gradle.AndroidScalaPluginSampleTask)
